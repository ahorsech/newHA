alarm:

    homeassistant:
      customize:

        automation.lr_threat_notification:
          icon: mdi:alarm-light

        automation.lr_threat_cancel_notification:
          icon: mdi:alarm-light-off

    # Сохранение в базе состояний сенсоров тревоги
    recorder:
      include:
        entities:
           - binary_sensor.m_kiyiv_air
           - binary_sensor.m_kiyiv_artillery
           - binary_sensor.m_kiyiv_unknown
           - binary_sensor.m_kiyiv_urban_fights

    template:

      - binary_sensor:

    # Сборный сенсор тревоги - будет активен при любой из видов тревог
          - name: threat
            state: >
              {{ is_state('binary_sensor.m_kiyiv_air', 'on')  
                 or is_state('binary_sensor.m_kiyiv_artillery', 'on')
                 or is_state('binary_sensor.m_kiyiv_unknown', 'on')
                 or is_state('binary_sensor.m_kiyiv_urban_fights', 'on')
              }}
            device_class: safety
            icon: >
              {% if is_state("binary_sensor.threat", "on") %}
              mdi:skull
              {% else %}
              mdi:shield-check
              {% endif %}

    automation:

      - id: Тревога, уведомление в гостиной
        alias: lr_threat_notification
        description: Включение световой индикации в гостиной при сработке сенсоров тревоги
        initial_state: true
        trigger:
    # Сборный сенсор тревоги
        - platform: state
          entity_id: binary_sensor.threat
          from: 'off'
          to: 'on'
        condition:
    # Переключатель режима работы сервера
          - condition: state
            entity_id: switch.control_mode
            state: 'on'
        action:
    # Сохранение состояния потолочных люстр, оснвное и задняя подсветка
         - service: scene.create
           data:
            scene_id: light_before
            snapshot_entities:
             - light.cr_ceiling_light
             - light.lr_ceiling_light_1
             - light.lr_ceiling_light_2
             - light.cr_ceiling_light_ambilight
             - light.lr_ceiling_light_1_ambilight
             - light.lr_ceiling_light_2_ambilight
    # Отключение основного освещения
         - service: light.turn_off
           entity_id: 
             - light.cr_ceiling_light
             - light.lr_ceiling_light_1
             - light.lr_ceiling_light_2
    # Включение эффекта Alarm на задней подсветке на 30 секунд
         - service: light.turn_on
           entity_id: 
             - light.cr_ceiling_light_ambilight
             - light.lr_ceiling_light_1_ambilight
             - light.lr_ceiling_light_2_ambilight
           data:
              brightness_pct: 100
              effect: Alarm
         - delay: 00:00:30
    # Включение эффекта Stop на задней подсветке, иначе эффект Alarm применится при следующем включении
         - service: light.turn_on
           entity_id: 
             - light.cr_ceiling_light_ambilight
             - light.lr_ceiling_light_1_ambilight
             - light.lr_ceiling_light_2_ambilight
           data:
              effect: Stop
    # Отключение подсветки
         - service: light.turn_off
           entity_id: 
             - light.cr_ceiling_light_ambilight
             - light.lr_ceiling_light_1_ambilight
             - light.lr_ceiling_light_2_ambilight
    # Возврат к предыдущему состоянию
         - service: scene.turn_on
           target:
             entity_id: scene.light_before
             
      - id: Отбой тревоги, уведомление в гостиной
        alias: lr_threat_cancel_notification
        description: Включение световой индикации в гостиной при отбое тревоги
        initial_state: true
        trigger:
    # Сборный сенсор тревоги
        - platform: state
          entity_id: binary_sensor.threat
          from: 'on'
          to: 'off'
        condition:
    # Переключатель режима работы сервера
          - condition: state
            entity_id: switch.control_mode
            state: 'on'
        action:
    # Сохранение состояния потолочных люстр, оснвное и задняя подсветка
         - service: scene.create
           data:
            scene_id: light_before
            snapshot_entities:
             - light.cr_ceiling_light
             - light.lr_ceiling_light_1
             - light.lr_ceiling_light_2
             - light.cr_ceiling_light_ambilight
             - light.lr_ceiling_light_1_ambilight
             - light.lr_ceiling_light_2_ambilight
    # Отключение основного освещения
         - service: light.turn_off
           entity_id: 
             - light.cr_ceiling_light
             - light.lr_ceiling_light_1
             - light.lr_ceiling_light_2
    # Запуск скрипта светового уведомления и ожидание 20 сек
         - service: script.turn_on
           entity_id: script.lr_threat_cancel_notification
         - delay: 00:00:20
    # Отключение подсветки
         - service: light.turn_off
           entity_id: 
             - light.cr_ceiling_light_ambilight
             - light.lr_ceiling_light_1_ambilight
             - light.lr_ceiling_light_2_ambilight
    # Возврат к предыдущему состоянию
         - service: scene.turn_on
           target:
             entity_id: scene.light_before
             
             
    script:
    
      lr_threat_cancel_notification:
        alias: Амбилайт в гостиной 5 зеленых вспышек
        sequence:
            repeat:
              count: 5 
              sequence:
              - service: light.turn_on
                entity_id: 
                   - light.cr_ceiling_light_ambilight
                   - light.lr_ceiling_light_1_ambilight
                   - light.lr_ceiling_light_2_ambilight
                data:
                  brightness_pct: 100
                  rgb_color: [0, 255, 0]
                  transition: 2
              - delay: 2
              - service: light.turn_off
                entity_id: 
                   - light.cr_ceiling_light_ambilight
                   - light.lr_ceiling_light_1_ambilight
                   - light.lr_ceiling_light_2_ambilight
                data:
                  transition: 2
              - delay: 2